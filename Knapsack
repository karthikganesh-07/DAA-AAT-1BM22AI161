def unboundedKnapsack(k, arr):
    dp = [0] * (k + 1)
    
    for i in range(k + 1):
        for val in arr:
            if val <= i:
                dp[i] = max(dp[i], dp[i - val] + val)
    
    return dp[k]

t = int(input())
results = []
for _ in range(t):
    n, k = map(int, input().split())
    arr = list(map(int, input().split()))
    results.append(unboundedKnapsack(k, arr))

for result in results:
    print(result)
